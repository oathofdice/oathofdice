# Format: https://dart.dev/tools/analysis#the-analysis-options-file

# A good starting point.
# https://github.com/flutter/packages/tree/main/packages/flutter_lints/lib
include: package:flutter_lints/flutter.yaml

# Turn it up to 11.
# https://dart.dev/tools/analysis#enabling-additional-type-checks
analyzer:
  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true

# Additional rules that are not part of the "recommended" set.
# https://dart.dev/tools/linter-rules
linter:
  rules:
    - always_put_required_named_parameters_first
    - avoid_annotating_with_dynamic
    - avoid_bool_literals_in_conditional_expressions
    - avoid_catches_without_on_clauses
    - avoid_catching_errors
    - avoid_classes_with_only_static_members
    - avoid_double_and_int_checks
    - avoid_dynamic_calls
    - avoid_escaping_inner_quotes
    - avoid_equals_and_hash_code_on_mutable_classes
    - avoid_field_initializers_in_const_classes
    - avoid_js_rounded_ints
    - avoid_multiple_declarations_per_line
    - avoid_positional_boolean_parameters
    - avoid_private_typedef_functions
    - avoid_redundant_argument_values
    - avoid_setters_without_getters
    - avoid_type_to_string
    - avoid_types_on_closure_parameters
    - avoid_unused_constructor_parameters
    - avoid_void_async
    - cast_nullable_to_non_nullable
    - combinators_ordering
    - conditional_uri_does_not_exist
    - comment_references
    - deprecated_consistency
    - directives_ordering
    - do_not_use_environment
    - leading_newlines_in_multiline_strings
    - library_annotations
    - matching_super_parameters
    - missing_whitespace_between_adjacent_strings
    - no_literal_bool_comparisons
    - no_self_assignments
    - no_wildcard_variable_uses
    - omit_local_variable_types
    - only_throw_errors
    - package_api_docs
    - parameter_assignments
    - prefer_asserts_in_initializer_lists
    - prefer_asserts_with_message
    - prefer_const_constructors
    - prefer_const_constructors_in_immutables
    - prefer_const_declarations
    - prefer_const_literals_to_create_immutables
    - prefer_constructors_over_static_methods
    - prefer_final_in_for_each
    - prefer_final_locals
    - prefer_for_elements_to_map_fromIterable
    - prefer_if_elements_to_conditional_expressions
    - prefer_int_literals
    - prefer_mixin
    - prefer_null_aware_method_calls
    - prefer_single_quotes
    - prefer_void_to_null
    - public_member_api_docs
    - require_trailing_commas
    - sort_pub_dependencies
    - test_types_in_equals
    - type_annotate_public_apis
    - throw_in_finally
    - unawaited_futures
    - unnecessary_await_in_return
    - unnecessary_breaks
    - unnecessary_lambdas
    - unnecessary_library_directive
    - unnecessary_null_aware_operator_on_extension_on_nullable
    - unnecessary_null_checks
    - unnecessary_parenthesis
    - unnecessary_raw_strings
    - unnecessary_statements
    - unreachable_from_main
    - use_enums
    - use_if_null_to_convert_nulls_to_bools
    - use_is_even_rather_than_modulo
    - use_named_constants
    - use_raw_strings
